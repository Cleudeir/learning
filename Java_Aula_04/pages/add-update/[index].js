import Head from "next/head";
import styles from "./index.module.css";
import { useEffect, useState } from "react";
import Header from "@/component/header";

import { useRouter } from "next/router";

export default function AddUpDate() {
  const router = useRouter();
  const id = router.query.index
  console.log(id);
  const [title, setTitle] = useState("cpp");
  const [image, setImage] = useState("https://raw.githubusercontent.com/abrahamcalf/programming-languages-logos/master/src/cpp/cpp_256x256.png");
  const [description, setDescription] = useState("");
  const [ranking, setRanking] = useState(5);
  const [origin, setOrigin] = useState("");

  useEffect(() => {
    if(id && id !== "new"){
      fetch(`/api/readbyid/${id}`)
      .then(response => response.json())
      .then(item=> {
        console.log(item)
        setTitle(item.title);
        setImage(item.image);
        setDescription(item.description);
        setRanking(item.ranking);
        setOrigin(item.origin);
      })
    }
  },[id])

  const languagesName = [
    "c",
    "cpp",
    "csharp",
    "css",
    "go-old",
    "go",
    "haskell",
    "html",
    "java",
    "javascript",
    "kotlin",
    "lua",
    "php",
    "python",
    "r",
    "ruby",
    "swift",
    "typescript",
  ];

  const handleSubmit = async (event) => {
    event.preventDefault();
    if(id === "new"){
    const item = {
      title,
      image,
      description,
      ranking,
      origin,
    }
    console.log(item);
    await fetch("/api/add/", {
      method: "POST",
      body: JSON.stringify(item),
    });
    }else{
      const item = {
        id,
        title,
        image,
        description,
        ranking,
        origin,
      }
      console.log(item);
      await fetch(`/api/update/${item}`);
    }
    window.location.href = "/languages";
};

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Header />

        <form className={styles.form} onSubmit={handleSubmit}>
          <select
            onChange={(e) => {
              const value = e.target.value;
              const url = `https://raw.githubusercontent.com/abrahamcalf/programming-languages-logos/master/src/${value}/${value}_256x256.png`;
              setTitle(value);
              setImage(url);
            }}
            value={title}
          >
            {languagesName.map((item) => (
              <option key={item} value={item}>
                {item.toUpperCase()}
              </option>
            ))}
          </select>
          <textarea
            type="url"
            value={image}
            onChange={(e)=>{setImage(e.target.value)}}
            placeholder="Image url"
            id="image"
            name="image"
          />
          <input
          value={description}
          onChange={(e)=>{setDescription(e.target.value)}}
            type="text"
            id="description"
            placeholder="Description"
            name="description"
          />

          <input
          value={ranking}
          onChange={(e)=>{setRanking(e.target.value)}}
            type="number"
            id="ranking"
            placeholder="Star"
            name="Ranking"
            min="1"
            max="5"
          />
          <input value={origin}
              onChange={(e)=>{setOrigin(e.target.value)}} type="text" placeholder="Author" id="origin" name="origin" />
          <input type="submit" value="Submit" />
        </form>
      </main>
    </>
  );
}
