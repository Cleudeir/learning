/* eslint-disable react-hooks/exhaustive-deps */
import React from "react";
import styles from "./index.module.css";
import Head from "next/head";
import HeaderBar from "../HeaderBar";
import Footer from "../FooterBar";
import useAppContext from "@/components/Context";
import { useEffect } from "react";
import { useRouter } from "next/router";
import { useState } from "react";
import Image from "next/image";

const ContainerPage = ({ children, isloading }) => {
  const { user, setUser } = useAppContext();
  const [isLoadInternal, setLoadInternal] = useState(false);
  const router = useRouter();
  console.log("Render Page");
  function GifLoading() {
    return (
      <div className={styles.gifLoading}>
        <Image
          className={styles.gif}
          src={"/loading.gif"}
          alt=""
          width={100}
          height={100}
        />
      </div>
    );
  }

  useEffect(() => {
    (async () => {
      if (router.pathname.includes("private")) {
        try {
          const get = await fetch("/api/firebase/init");
          const { user } = await get.json();
          if (user) {
            setUser(user);
          } else {
            window.location.href = "/login";
          }
          setLoadInternal(true);
        } catch (error) {
          setLoadInternal(true);
          console.error(error);
          throw new Error("Error login");
        }
      } else {
        setLoadInternal(true);
      }
    })();
  }, [router.pathname]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {isLoadInternal && (
        <>
          <HeaderBar user={user} />
          {isloading && <main className={styles.main}>{children}</main>}
          {!isloading && <GifLoading />}
          <Footer />
        </>
      )}
      {!isLoadInternal && <GifLoading />}
    </div>
  );
};

export default ContainerPage;
